/* soapStub.h
   Generated by gSOAP 2.8.83 for C:\Users\YYu\Documents\LR\release-2020\WebService\gsoap\gsoap_2.8.83\gsoap-2.8\gsoap\mod_gsoap\gsoap_win\isapi\vs2010\samples\dime\dime.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/


#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 20883
# error "GSOAP VERSION 20883 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes, Structs and Unions                                                *
 *                                                                            *
\******************************************************************************/

class xsd__base64Binary;	/* C:\Users\YYu\Documents\LR\release-2020\WebService\gsoap\gsoap_2.8.83\gsoap-2.8\gsoap\mod_gsoap\gsoap_win\isapi\vs2010\samples\dime\dime.h:7 */
struct ns__getImageResponse;	/* C:\Users\YYu\Documents\LR\release-2020\WebService\gsoap\gsoap_2.8.83\gsoap-2.8\gsoap\mod_gsoap\gsoap_win\isapi\vs2010\samples\dime\dime.h:22 */
struct ns__getImage;	/* C:\Users\YYu\Documents\LR\release-2020\WebService\gsoap\gsoap_2.8.83\gsoap-2.8\gsoap\mod_gsoap\gsoap_win\isapi\vs2010\samples\dime\dime.h:22 */
struct ns__putImageResponse;	/* C:\Users\YYu\Documents\LR\release-2020\WebService\gsoap\gsoap_2.8.83\gsoap-2.8\gsoap\mod_gsoap\gsoap_win\isapi\vs2010\samples\dime\dime.h:24 */
struct ns__putImage;	/* C:\Users\YYu\Documents\LR\release-2020\WebService\gsoap\gsoap_2.8.83\gsoap-2.8\gsoap\mod_gsoap\gsoap_win\isapi\vs2010\samples\dime\dime.h:24 */

/* C:\Users\YYu\Documents\LR\release-2020\WebService\gsoap\gsoap_2.8.83\gsoap-2.8\gsoap\mod_gsoap\gsoap_win\isapi\vs2010\samples\dime\dime.h:7 */
#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (7)
/* binary data attached as MTOM/MIME/DIME attachment or included as *`xsd:base64Binary`* base64: */
class SOAP_CMAC xsd__base64Binary {
      public:
        unsigned char *__ptr;
        int __size;
        /// Optional element 'id' of XML schema type 'xsd:string'
        char *id;
        /// Optional element 'type' of XML schema type 'xsd:string'
        char *type;
        /// Optional element 'options' of XML schema type 'xsd:string'
        char *options;
        xsd__base64Binary();
        xsd__base64Binary(struct soap *soap, int n);
        ~xsd__base64Binary();
        unsigned char *location();
        int size();
      public:
        /// Return unique type id SOAP_TYPE_xsd__base64Binary
        virtual long soap_type(void) const { return SOAP_TYPE_xsd__base64Binary; }
        /// (Re)set members to default values
        virtual void soap_default(struct soap*);
        /// Serialize object to prepare for SOAP 1.1/1.2 encoded output (or with SOAP_XML_GRAPH) by analyzing its (cyclic) structures
        virtual void soap_serialize(struct soap*) const;
        /// Output object in XML, compliant with SOAP 1.1 encoding style, return error code or SOAP_OK
        virtual int soap_put(struct soap*, const char *tag, const char *type) const;
        /// Output object in XML, with tag and optional id attribute and xsi:type, return error code or SOAP_OK
        virtual int soap_out(struct soap*, const char *tag, int id, const char *type) const;
        /// Get object from XML, compliant with SOAP 1.1 encoding style, return pointer to object or NULL on error
        virtual void *soap_get(struct soap*, const char *tag, const char *type);
        /// Get object from XML, with matching tag and type (NULL matches any tag and type), return pointer to object or NULL on error
        virtual void *soap_in(struct soap*, const char *tag, const char *type);
        /// Return a new object of type xsd__base64Binary, default initialized and not managed by a soap context
        virtual xsd__base64Binary *soap_alloc(void) const { return SOAP_NEW_UNMANAGED(xsd__base64Binary); }
        /// Friend allocator used by soap_new_xsd__base64Binary(struct soap*, int)
        friend SOAP_FMAC1 xsd__base64Binary * SOAP_FMAC2 soap_instantiate_xsd__base64Binary(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* C:\Users\YYu\Documents\LR\release-2020\WebService\gsoap\gsoap_2.8.83\gsoap-2.8\gsoap\mod_gsoap\gsoap_win\isapi\vs2010\samples\dime\dime.h:22 */
#ifndef SOAP_TYPE_ns__getImageResponse
#define SOAP_TYPE_ns__getImageResponse (22)
/* complex XML schema type 'ns:getImageResponse': */
struct SOAP_CMAC ns__getImageResponse {
      public:
        /** Required element 'image' of XML schema type 'xsd:base64Binary' */
        xsd__base64Binary image;
      public:
        /** Return unique type id SOAP_TYPE_ns__getImageResponse */
        long soap_type() const { return SOAP_TYPE_ns__getImageResponse; }
        /** Constructor with member initializations */
        ns__getImageResponse() : image() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__getImageResponse * SOAP_FMAC2 soap_instantiate_ns__getImageResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* C:\Users\YYu\Documents\LR\release-2020\WebService\gsoap\gsoap_2.8.83\gsoap-2.8\gsoap\mod_gsoap\gsoap_win\isapi\vs2010\samples\dime\dime.h:22 */
#ifndef SOAP_TYPE_ns__getImage
#define SOAP_TYPE_ns__getImage (23)
/* complex XML schema type 'ns:getImage': */
struct SOAP_CMAC ns__getImage {
      public:
        /** Optional element 'name' of XML schema type 'xsd:string' */
        char *name;
      public:
        /** Return unique type id SOAP_TYPE_ns__getImage */
        long soap_type() const { return SOAP_TYPE_ns__getImage; }
        /** Constructor with member initializations */
        ns__getImage() : name() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__getImage * SOAP_FMAC2 soap_instantiate_ns__getImage(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* C:\Users\YYu\Documents\LR\release-2020\WebService\gsoap\gsoap_2.8.83\gsoap-2.8\gsoap\mod_gsoap\gsoap_win\isapi\vs2010\samples\dime\dime.h:24 */
#ifndef SOAP_TYPE_ns__putImageResponse
#define SOAP_TYPE_ns__putImageResponse (27)
/* complex XML schema type 'ns:putImageResponse': */
struct SOAP_CMAC ns__putImageResponse {
      public:
        /** Required element 'status' of XML schema type 'xsd:int' */
        int status;
      public:
        /** Return unique type id SOAP_TYPE_ns__putImageResponse */
        long soap_type() const { return SOAP_TYPE_ns__putImageResponse; }
        /** Constructor with member initializations */
        ns__putImageResponse() : status() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__putImageResponse * SOAP_FMAC2 soap_instantiate_ns__putImageResponse(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* C:\Users\YYu\Documents\LR\release-2020\WebService\gsoap\gsoap_2.8.83\gsoap-2.8\gsoap\mod_gsoap\gsoap_win\isapi\vs2010\samples\dime\dime.h:24 */
#ifndef SOAP_TYPE_ns__putImage
#define SOAP_TYPE_ns__putImage (28)
/* complex XML schema type 'ns:putImage': */
struct SOAP_CMAC ns__putImage {
      public:
        /** Optional element 'name' of XML schema type 'xsd:string' */
        char *name;
        /** Optional element 'image' of XML schema type 'xsd:base64Binary' */
        xsd__base64Binary *image;
      public:
        /** Return unique type id SOAP_TYPE_ns__putImage */
        long soap_type() const { return SOAP_TYPE_ns__putImage; }
        /** Constructor with member initializations */
        ns__putImage() : name(), image() { }
        /** Friend allocator */
        friend SOAP_FMAC1 ns__putImage * SOAP_FMAC2 soap_instantiate_ns__putImage(struct soap*, int, const char*, const char*, size_t*);
};
#endif

/* C:\Users\YYu\Documents\LR\release-2020\WebService\gsoap\gsoap_2.8.83\gsoap-2.8\gsoap\mod_gsoap\gsoap_win\isapi\vs2010\samples\dime\dime.h:25 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (29)
/* SOAP_ENV__Header: */
struct SOAP_CMAC SOAP_ENV__Header {
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Header */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Header; }
        /** Constructor with member initializations */
        SOAP_ENV__Header() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* C:\Users\YYu\Documents\LR\release-2020\WebService\gsoap\gsoap_2.8.83\gsoap-2.8\gsoap\mod_gsoap\gsoap_win\isapi\vs2010\samples\dime\dime.h:25 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (30)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_CMAC SOAP_ENV__Code {
      public:
        /** Optional element 'SOAP-ENV:Value' of XML schema type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Code */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Code; }
        /** Constructor with member initializations */
        SOAP_ENV__Code() : SOAP_ENV__Value(), SOAP_ENV__Subcode() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* C:\Users\YYu\Documents\LR\release-2020\WebService\gsoap\gsoap_2.8.83\gsoap-2.8\gsoap\mod_gsoap\gsoap_win\isapi\vs2010\samples\dime\dime.h:25 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (32)
/* SOAP_ENV__Detail: */
struct SOAP_CMAC SOAP_ENV__Detail {
      public:
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_<typename> assigned to __type */
        /** Do not create a cyclic data structure throught this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Detail */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Detail; }
        /** Constructor with member initializations */
        SOAP_ENV__Detail() : __any(), __type(), fault() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* C:\Users\YYu\Documents\LR\release-2020\WebService\gsoap\gsoap_2.8.83\gsoap-2.8\gsoap\mod_gsoap\gsoap_win\isapi\vs2010\samples\dime\dime.h:25 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (34)
/* SOAP_ENV__Reason: */
struct SOAP_CMAC SOAP_ENV__Reason {
      public:
        /** Optional element 'SOAP-ENV:Text' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Text;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Reason */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Reason; }
        /** Constructor with member initializations */
        SOAP_ENV__Reason() : SOAP_ENV__Text() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/* C:\Users\YYu\Documents\LR\release-2020\WebService\gsoap\gsoap_2.8.83\gsoap-2.8\gsoap\mod_gsoap\gsoap_win\isapi\vs2010\samples\dime\dime.h:25 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (35)
/* SOAP_ENV__Fault: */
struct SOAP_CMAC SOAP_ENV__Fault {
      public:
        /** Optional element 'faultcode' of XML schema type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XML schema type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XML schema type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XML schema type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
      public:
        /** Return unique type id SOAP_TYPE_SOAP_ENV__Fault */
        long soap_type() const { return SOAP_TYPE_SOAP_ENV__Fault; }
        /** Constructor with member initializations */
        SOAP_ENV__Fault() : faultcode(), faultstring(), faultactor(), detail(), SOAP_ENV__Code(), SOAP_ENV__Reason(), SOAP_ENV__Node(), SOAP_ENV__Role(), SOAP_ENV__Detail() { }
        /** Friend allocator */
        friend SOAP_FMAC1 SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* (built-in):0 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
typedef char *_XML;
#endif

/* (built-in):0 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
typedef char *_QName;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* unsigned char has binding name 'unsignedByte' for type 'xsd:unsignedByte' */
#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (9)
#endif

/* unsigned int has binding name 'unsignedInt' for type 'xsd:unsignedInt' */
#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (8)
#endif

/* xsd__base64Binary has binding name 'xsd__base64Binary' for type 'xsd:base64Binary' */
#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (7)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (35)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (34)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (32)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (30)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (29)
#endif

/* struct ns__putImage has binding name 'ns__putImage' for type 'ns:putImage' */
#ifndef SOAP_TYPE_ns__putImage
#define SOAP_TYPE_ns__putImage (28)
#endif

/* struct ns__putImageResponse has binding name 'ns__putImageResponse' for type 'ns:putImageResponse' */
#ifndef SOAP_TYPE_ns__putImageResponse
#define SOAP_TYPE_ns__putImageResponse (27)
#endif

/* struct ns__getImage has binding name 'ns__getImage' for type 'ns:getImage' */
#ifndef SOAP_TYPE_ns__getImage
#define SOAP_TYPE_ns__getImage (23)
#endif

/* struct ns__getImageResponse has binding name 'ns__getImageResponse' for type 'ns:getImageResponse' */
#ifndef SOAP_TYPE_ns__getImageResponse
#define SOAP_TYPE_ns__getImageResponse (22)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (37)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (36)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (31)
#endif

/* xsd__base64Binary * has binding name 'PointerToxsd__base64Binary' for type 'xsd:base64Binary' */
#ifndef SOAP_TYPE_PointerToxsd__base64Binary
#define SOAP_TYPE_PointerToxsd__base64Binary (24)
#endif

/* unsigned char * has binding name 'PointerTounsignedByte' for type 'xsd:unsignedByte' */
#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (10)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Client-Side Call Stub Functions                                            *
 *                                                                            *
\******************************************************************************/

    
    /** Web service synchronous operation 'soap_call_ns__getImage' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__getImage(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *name, xsd__base64Binary &image);
    /** Web service asynchronous operation 'soap_send_ns__getImage' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__getImage(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *name);
    /** Web service asynchronous operation 'soap_recv_ns__getImage' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__getImage(struct soap *soap, xsd__base64Binary &image);
    
    /** Web service synchronous operation 'soap_call_ns__putImage' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns__putImage(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *name, xsd__base64Binary *image, int &status);
    /** Web service asynchronous operation 'soap_send_ns__putImage' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_send_ns__putImage(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *name, xsd__base64Binary *image);
    /** Web service asynchronous operation 'soap_recv_ns__putImage' to receive a response message from the connected endpoint, returns SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 soap_recv_ns__putImage(struct soap *soap, int &status);

/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/

    /** Web service operation 'ns__getImage' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__getImage(struct soap*, char *name, xsd__base64Binary &image);
    /** Web service operation 'ns__putImage' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__putImage(struct soap*, char *name, xsd__base64Binary *image, int &status);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__getImage(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__putImage(struct soap*);

#endif

/* End of soapStub.h */
